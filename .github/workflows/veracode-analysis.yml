# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow will initiate a Veracode Static Analysis Pipeline scan, return a results.json and convert to SARIF for upload as a code scanning alert

name: Veracode Static Analysis Pipeline Scan
on: workflow_dispatch

# on:
#  push:
#    branches: [ "master" ]
#  pull_request:
    # The branches below must be a subset of the branches above
#    branches: [ "master" ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
permissions:
  contents: read
  issues: write
  actions: write

jobs:
  # This workflow contains a job to build and submit pipeline scan, you will need to customize the build process accordingly and make sure the artifact you build is used as the file input to the pipeline scan file parameter
  build-and-pipeline-scan:
    # The type of runner that the job will run on
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    runs-on: ubuntu-latest
    steps:

    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it and copies all sources into ZIP file for submitting for analysis. Replace this section with your applications build steps
    - uses: actions/checkout@v3
      with:
        repository: ''

    - uses: actions/checkout@v1
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    # - run: zip -r veracode-scan-target.zip ./

    # download the Veracode Static Analysis Pipeline scan jar
    - run: curl --silent --show-error --fail -O https://downloads.veracode.com/securityscan/pipeline-scan-LATEST.zip
    - run: unzip -o pipeline-scan-LATEST.zip

    - uses: actions/setup-java@v3
      with:
        java-version: 8
        distribution: 'temurin'
    - run: java -jar pipeline-scan.jar --veracode_api_id "${{secrets.VERACODE_API_ID}}" --veracode_api_key "${{secrets.VERACODE_API_KEY}}" --fail_on_severity="Very High" --file */verademo.war
      continue-on-error: true
    - name: Convert pipeline scan output to SARIF format
      id: convert
      uses: veracode/veracode-pipeline-scan-results-to-sarif@ff08ae5b45d5384cb4679932f184c013d34da9be
      with:
        pipeline-results-json: results.json
    - uses: github/codeql-action/upload-sarif@v2
      with:
        # Path to SARIF file relative to the root of the repository
        sarif_file: veracode-results.sarif
        

    - name: Veracode scan results to GitHub issues Action
  # You may pin to the exact commit or the version.
  # uses: veracode/veracode-flaws-to-issues@8d94267a4d71de4400348fd755344dc88d5cb8b9
      uses: veracode/veracode-flaws-to-issues@v2.1.19
      with:
    # Scan results file
        scan-results-json: 'results.json' # default is filtered_results.json
        

    - name: get scan results
      uses: actions/download-artifact@v2
      with:
          name: filtered-results
    - name: import flaws as issues
      uses: buzzcode/veracode-flaws-to-issues@v1
      with:
          scan-results-json: 'filtered_results.json'
          github-token: ${{ secrets.GITHUB_TOKEN }}
